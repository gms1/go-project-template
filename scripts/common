#!/usr/bin/bash
SCRIPT_DIRNAME=$(dirname -- "${BASH_SOURCE[0]}")
WORKSPACE_DIR=$(realpath "${SCRIPT_DIRNAME}/..")

source "${SCRIPT_DIRNAME}/core"


#---------------------------------------------------------
getVersion() {
  awk -F\" '/Version/{print $2}' "${WORKSPACE_DIR}/${ABOOUT_GO}"
}

#---------------------------------------------------------
getNextVersion() {
  local version="$(getVersion)"
  local versionParts=( $(echo ${version//./ } ))
  local nextPatchVersion="${versionParts[2]}"
  nextPatchVersion="$((nextPatchVersion + 1))"
  echo "${versionParts[0]}.${versionParts[1]}.${nextPatchVersion}"
}

#---------------------------------------------------------
gitMustBeClean() {
  git diff --cached --quiet "$@" &>/dev/null || die "repo $@ is not clean (changes in staging area)"
  git diff --quiet "$@" &>/dev/null || die "repo $@ is not clean (changes not staged)"
}

#---------------------------------------------------------
setExitOnErrorOn
source "${SCRIPT_DIRNAME}/config"

cd "${WORKSPACE_DIR}"
